/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ua.edu.lnu.cluster.ui.dm;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Collections;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.xml.transform.TransformerConfigurationException;
import org.openide.util.Exceptions;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.lookup.AbstractLookup;
import org.openide.util.lookup.InstanceContent;
import org.xml.sax.SAXException;
import ua.edu.lnu.cluster.DataColumn;
import ua.edu.lnu.cluster.DataModel;
import ua.edu.lnu.cluster.loaders.api.XMLIO;
import ua.edu.lnu.cluster.utils.TCManager;
import ua.edu.lnu.cluster.ui.dm.editors.CategoryCellEditor;
import ua.edu.lnu.cluster.ui.dm.renderers.ValidCellRenderer;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//ua.edu.lnu.cluster.ui.dm//DataModel//EN",
autostore = false)
@TopComponent.Description(preferredID = "DataModelTopComponent",
iconBase = "ua/edu/lnu/cluster/ui/dm/dm.png",
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "ua.edu.lnu.cluster.ui.dm.DataModelTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_DataModelAction",
preferredID = "DataModelTopComponent")
public final class DataModelTopComponent extends TopComponent {

    private class DataColumnListener implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent lse) {
            if (jTable1.getSelectedColumnCount() <= 0) {
                if (selectedColumn != null) {
                    content.remove(selectedColumn);
                    selectedColumn = null;
                }
                return;
            }

            DataColumn selected = dataModel.getDataColumn(jTable1.getSelectedColumns()[0]);

            if (selected != selectedColumn) {
                if (selectedColumn != null) {
                    content.remove(selectedColumn);
                }
                selectedColumn = selected;
                content.add(selectedColumn);
            }
        }
    }
    private DataModel dataModel = null;
    private DataColumn selectedColumn = null;
    private final InstanceContent content = new InstanceContent();

    public DataModelTopComponent() {
        this(null);
    }

    public DataModelTopComponent(DataModel model) {
        initComponents();
        setName(NbBundle.getMessage(DataModelTopComponent.class, "CTL_DataModelTopComponent"));
        setToolTipText(NbBundle.getMessage(DataModelTopComponent.class, "HINT_DataModelTopComponent"));

        if (model != null) {
            this.dataModel = model;
            associateLookup(new AbstractLookup(content));
            content.set(Collections.singleton(this.dataModel), null);

            jTable1.setModel(new DMTableModel(dataModel));
            jTable1.getSelectionModel().addListSelectionListener(new DataColumnListener());
            jTable1.setDefaultRenderer(Object.class, new ValidCellRenderer());
            jTable1.setDefaultEditor(Integer.class, new CategoryCellEditor());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(DataModelTopComponent.class, "DataModelTopComponent.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(jButton1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
        TCManager.getInstance().onDataModelClose(dataModel);
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
